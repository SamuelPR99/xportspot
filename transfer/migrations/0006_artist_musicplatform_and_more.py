# Generated by Django 5.2.3 on 2025-06-29 16:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('transfer', '0005_user_youtube_music_browser_data_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('spotify_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('youtube_music_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('soundcloud_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('apple_music_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('genres', models.JSONField(default=list)),
                ('image_url', models.URLField(blank=True)),
                ('popularity_score', models.IntegerField(default=0)),
                ('total_listeners', models.IntegerField(default=0)),
                ('monthly_listeners', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MusicPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('spotify', 'Spotify'), ('youtube_music', 'YouTube Music'), ('soundcloud', 'SoundCloud'), ('apple_music', 'Apple Music'), ('deezer', 'Deezer'), ('tidal', 'Tidal'), ('amazon_music', 'Amazon Music'), ('pandora', 'Pandora')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('icon_url', models.URLField(blank=True)),
                ('color', models.CharField(default='#1DB954', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('supports_oauth', models.BooleanField(default=False)),
                ('api_documentation_url', models.URLField(blank=True)),
            ],
            options={
                'ordering': ['display_name'],
            },
        ),
        migrations.RenameField(
            model_name='user',
            old_name='last_spotify_sync',
            new_name='last_music_sync',
        ),
        migrations.RemoveField(
            model_name='user',
            name='auto_import_playlists',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_access_token',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_connected_at',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_display_name',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_premium',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_refresh_token',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_token_expires_at',
        ),
        migrations.RemoveField(
            model_name='user',
            name='spotify_user_id',
        ),
        migrations.RemoveField(
            model_name='user',
            name='youtube_music_browser_data',
        ),
        migrations.RemoveField(
            model_name='user',
            name='youtube_music_configured',
        ),
        migrations.RemoveField(
            model_name='user',
            name='youtube_music_configured_at',
        ),
        migrations.AddField(
            model_name='user',
            name='allow_friend_requests',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.TextField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name='user',
            name='birth_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='friend_requests_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='last_active',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='user',
            name='music_recommendations_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_public',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='show_listening_stats',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='show_top_artists',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='show_top_genres',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#8B5CF6', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('parent_genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transfer.genre')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserMusicConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_user_id', models.CharField(max_length=200)),
                ('platform_username', models.CharField(blank=True, max_length=200)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('profile_data', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('sync_errors', models.TextField(blank=True)),
                ('connected_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transfer.musicplatform')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-connected_at'],
                'unique_together': {('user', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('accepted', 'Aceptada'), ('blocked', 'Bloqueada')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('addressee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_friend_requests', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_friend_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('requester', 'addressee')},
            },
        ),
        migrations.CreateModel(
            name='MusicCompatibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_compatibility', models.FloatField(default=0.0)),
                ('artist_compatibility', models.FloatField(default=0.0)),
                ('genre_compatibility', models.FloatField(default=0.0)),
                ('shared_artists', models.JSONField(default=list)),
                ('shared_genres', models.JSONField(default=list)),
                ('compatibility_details', models.JSONField(default=dict)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-overall_compatibility'],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='UserListeningStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Diario'), ('weekly', 'Semanal'), ('monthly', 'Mensual'), ('yearly', 'Anual'), ('all_time', 'Todo el tiempo')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_minutes', models.IntegerField(default=0)),
                ('total_tracks', models.IntegerField(default=0)),
                ('unique_artists', models.IntegerField(default=0)),
                ('unique_albums', models.IntegerField(default=0)),
                ('top_artists', models.JSONField(default=list)),
                ('top_genres', models.JSONField(default=list)),
                ('top_tracks', models.JSONField(default=list)),
                ('listening_patterns', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_stats', to=settings.AUTH_USER_MODEL)),
                ('platform_connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transfer.usermusicconnection')),
            ],
            options={
                'ordering': ['-period_end'],
                'unique_together': {('user', 'platform_connection', 'period_type', 'period_start')},
            },
        ),
    ]
